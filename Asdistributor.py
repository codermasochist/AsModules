# meta developer: @codermasochist

from asyncio import sleep
import re
from .. import loader, utils

@loader.tds
class Asdistributor(loader.Module):
    """–†–∞—Å—Å—ã–ª–∫–∞ –≤ —á–∞—Ç. by @codermasochist"""

    strings = {
        "name": "As distributor"
    }

    def __init__(self):
        self.running = False
        self.interval = 600
        self.chat_ids = set()

    def parse_time(self, time_str):
        match = re.match(r"(\d+)([smh])", time_str)
        if not match:
            return None
        value, unit = int(match.group(1)), match.group(2)
        if unit == "s":
            return value
        elif unit == "m":
            return value * 60
        elif unit == "h":
            return value * 60 * 60
        return None

    async def send_or_edit(self, message, text):
        owner = await self._client.get_me()
        owner_ids = owner.id
        if message.sender_id == owner_ids:
            await message.edit(text)
        else:
            await message.respond(text)

    @loader.command()
    async def sitcmd(self, message):
        """‚Äî 1s, 1m, 1h"""
        args = utils.get_args_raw(message)
        if not args:
            await self.send_or_edit(message, "<emoji document_id=5877477244938489129>üö´</emoji><b> –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 1s, 1m, 1h.</b>")
            return
        interval = self.parse_time(args)
        if interval is None:
            await self.send_or_edit(message, "<emoji document_id=5877477244938489129>üö´</emoji><b> –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 1s, 1m, 1h.</b>")
            return
        self.interval = interval
        await self.send_or_edit(message, f"<emoji document_id=5123230779593196220>‚è∞</emoji> <b>–∏–Ω—Ç–µ—Ä–≤–∞–ª —Ä–∞—Å—Å—ã–ª–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞</b> {args}")

    @loader.command()
    async def dobrcmd(self, message):
        """‚Äî –∏–¥ —á–∞—Ç–∞"""
        args = utils.get_args_raw(message)
        if not args:
            await self.send_or_edit(message, "‚ùó –£–∫–∞–∂–∏—Ç–µ  –∏–¥ —á–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
            return

        try:
            chat_ids = {int(chat_id) for chat_id in args.split()}
            self.chat_ids.update(chat_ids)
            await self.send_or_edit(message, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —á–∞—Ç–æ–≤: {len(chat_ids)}. –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {len(self.chat_ids)}.")
        except ValueError:
            await self.send_or_edit(message, "‚ùó –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ ID —á–∞—Ç–æ–≤.")

    @loader.command()
    async def delccmd(self, message):
        """‚Äî –∏–¥ —á–∞—Ç–∞"""
        args = utils.get_args_raw(message)
        if not args:
            await self.send_or_edit(message, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            return

        try:
            chat_ids = {int(chat_id) for chat_id in args.split()}
            self.chat_ids.difference_update(chat_ids)
            await self.send_or_edit(message, f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —á–∞—Ç–æ–≤: {len(chat_ids)}. –û—Å—Ç–∞–ª–æ—Å—å —á–∞—Ç–æ–≤: {len(self.chat_ids)}.")
        except ValueError:
            await self.send_or_edit(message, "‚ùó –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ ID —á–∞—Ç–æ–≤.")

    @loader.command()
    async def listrcmd(self, message):
        """‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫"""
        if not self.chat_ids:
            await self.send_or_edit(message, "‚ùó –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç.")
            return
        chat_list = "\n".join(str(chat_id) for chat_id in self.chat_ids)
        await self.send_or_edit(message, f"<emoji document_id=5956561916573782596>üìÑ</emoji> <b>—Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤</b>:\n{chat_list}")

    @loader.command()
    async def rslcmd(self, message):
        """‚Äî <—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ>"""
        reply = await message.get_reply_message()
        args = utils.get_args_raw(message)
        chat_id = message.chat_id
        
        try:
            count = 999999
            self.running = True

            if reply:
                mess = reply

                await message.delete()
                await reply.delete()

                for _ in range(count):
                    if not self.running:
                        break
                    mess = await self.client.send_message(chat_id, mess)
                    await sleep(self.interval)

            else:
                mess = args

                await message.delete()

                if message.media:
                    for _ in range(count):
                        if not self.running:
                            break
                        message = await self.client.send_file(chat_id, message.media, caption=mess)
                        await sleep(self.interval)
                else:
                    for _ in range(count):
                        if not self.running:
                            break
                        await self.client.send_message(chat_id, mess)
                        await sleep(self.interval)

        except Exception as e:
            await self.send_or_edit(message, f"‚ö† –û—à–∏–±–∫–∞: {e}")

    @loader.command()
    async def orslcmd(self, message):
        """‚Äî <—Ä–µ–ø–ª–∞–π> """
        reply = await message.get_reply_message()
        if not reply:
            await self.send_or_edit(message, "<emoji document_id=5384233476859896660>üò≥</emoji> <b>–†–µ–ø–ª–∞–π–Ω–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å —Ä–∞—Å—Å—ã–ª–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª.</b>")
            return

        self.running = True
        await self.send_or_edit(message, "<emoji document_id=5256182535917940722>‚§µÔ∏è</emoji> <b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ä–µ–∂–∏–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª.</b>")
        try:
            while self.running:
                await reply.forward_to(message.chat_id)
                await sleep(self.interval)
        except Exception as e:
            await self.send_or_edit(message, f"<emoji document_id=5440660757194744323>‚ÄºÔ∏è</emoji> –û—à–∏–±–∫–∞: {e}")

    @loader.command()
    async def startrcmd(self, message):
        """‚Äî <—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ä–µ–ø–ª–∞–π>."""
        reply = await message.get_reply_message()
        args = utils.get_args_raw(message)

        if not self.chat_ids:
            await self.send_or_edit(message, "<emoji document_id=5879813604068298387>‚ùóÔ∏è</emoji> —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç.")
            return

        if not args and not reply:
            await self.send_or_edit(message, "<emoji document_id=5420323339723881652>‚ö†Ô∏è</emoji> <b>—É–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ.</b>")
            return

        content = reply or args
        self.running = True
        await self.send_or_edit(message, "<emoji document_id=5256182535917940722>‚§µÔ∏è</emoji> <b>distributor startled</b>.")
        
        try:
            while self.running:
                for chat_id in self.chat_ids:
                    if not self.running:
                        break

                    try:
                        if reply:
                            await reply.forward_to(chat_id)
                        else:
                            await self.client.send_message(chat_id, content)
                        await sleep(self.interval)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç {chat_id}: {e}")
        except Exception as e:
            await self.send_or_edit(message, f"‚ö† –û—à–∏–±–∫–∞: {e}")

    @loader.command()
    async def stoprcmd(self, message):
        """‚Äî —Å—Ç–æ–ø —Ä–∞—Å—Å—ã–ª–∫–∏."""
        self.running = False
        await self.send_or_edit(message, "<emoji document_id=5319090522470495400>‚≠ïÔ∏è</emoji> <b>distributor stopped.</b>")
